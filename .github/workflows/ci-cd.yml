name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  build_and_deploy:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }} .
          docker tag ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/my-app:latest

      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}
          docker push ${{ secrets.DOCKER_USERNAME }}/my-app:latest

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.23.0'

      - name: Configure kubectl
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" > $env:GITHUB_WORKSPACE\kubeconfig.yaml
          $env:KUBECONFIG = "$env:GITHUB_WORKSPACE\kubeconfig.yaml"

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/my-app my-app=${{ secrets.DOCKER_USERNAME }}/my-app:${{ github.sha }}
          kubectl rollout status deployment/my-app

      - name: Notify on success (Slack)
        if: success()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment succeeded: my-app:${{ github.sha }}"}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify on failure (Slack)
        if: failure()
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Deployment failed: my-app:${{ github.sha }}"}' ${{ secrets.SLACK_WEBHOOK_URL }}
